import * as React from 'react';
export interface ListItemProps<T> extends React.HTMLProps<T> {
    className: string;
    classNamesFromList: string[];
    attributesFromList: object;
    childrenTabIndex: number;
    tabIndex: number;
    shouldFocus: boolean;
    shouldFollowHref: boolean;
    shouldToggleCheckbox: boolean;
    onKeyDown: React.KeyboardEventHandler<T>;
    onClick: React.MouseEventHandler<T>;
    onFocus: React.FocusEventHandler<T>;
    onBlur: React.FocusEventHandler<T>;
    tag: string;
    children: React.ReactNode;
}
export default class ListItem<T extends {} = HTMLElement> extends React.Component<ListItemProps<T>, {}> {
    listItemElement_: React.RefObject<T>;
    static defaultProps: Partial<ListItemProps<HTMLElement>>;
    componentDidUpdate(prevProps: ListItemProps<T>): void;
    readonly classes: string;
    focus(): void;
    followHref(): void;
    toggleCheckbox(): void;
    render(): JSX.Element;
    renderChild: (child: React.ReactChild) => React.ReactChild;
}
