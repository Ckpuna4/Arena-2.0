(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("classnames"), require("@material/react-tab-scroller/dist/index.js"), require("@material/react-tab/dist/index.js"), require("@material/tab-bar/dist/mdc.tabBar.js"));
	else if(typeof define === 'function' && define.amd)
		define(["react", "classnames", "@material/react-tab-scroller/dist/index.js", "@material/react-tab/dist/index.js", "@material/tab-bar/dist/mdc.tabBar.js"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("react"), require("classnames"), require("@material/react-tab-scroller/dist/index.js"), require("@material/react-tab/dist/index.js"), require("@material/tab-bar/dist/mdc.tabBar.js")) : factory(root["react"], root["classnames"], root["@material/react-tab-scroller/dist/index.js"], root["@material/react-tab/dist/index.js"], root["@material/tab-bar/dist/mdc.tabBar.js"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_84__, __WEBPACK_EXTERNAL_MODULE_85__, __WEBPACK_EXTERNAL_MODULE_86__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 83);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),

/***/ 1:
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }),

/***/ 83:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(0);
var classnames_1 = __webpack_require__(1);
var react_tab_scroller_1 = __webpack_require__(84);
var react_tab_1 = __webpack_require__(85); // eslint-disable-line no-unused-vars
exports.Tab = react_tab_1.default;
// @ts-ignore No mdc .d.ts files
var mdc_tabBar_1 = __webpack_require__(86);
;
;
var TabBar = /** @class */ (function (_super) {
    __extends(TabBar, _super);
    function TabBar(props) {
        var _this = _super.call(this, props) || this;
        _this.tabBarRef = React.createRef();
        _this.tabScrollerRef = React.createRef();
        _this.tabList = [];
        _this.pushToTabList = function (el) {
            _this.tabList.push(el);
        };
        _this.onKeyDown = function (e) {
            // Persist the synthetic event to access its `key`.
            e.persist();
            _this.setState({ previousActiveIndex: _this.props.activeIndex }, function () {
                return _this.foundation.handleKeyDown(e);
            });
            if (_this.props.onKeyDown) {
                _this.props.onKeyDown(e);
            }
        };
        _this.onClickTab = function (e, index, onClick) {
            _this.setState({ previousActiveIndex: _this.props.activeIndex }, function () {
                return _this.adapter.setActiveTab(index);
            });
            if (onClick) {
                onClick(e);
            }
        };
        _this.renderTab = function (tab, index) {
            var _a = tab.props, children = _a.children, onClick = _a.onClick, otherProps = __rest(_a, ["children", "onClick"]);
            var props = __assign({ onClick: function (e) { return _this.onClickTab(e, index, onClick); }, ref: _this.pushToTabList }, otherProps);
            return React.cloneElement(tab, props, children);
        };
        _this.state = {
            previousActiveIndex: props.activeIndex,
        };
        return _this;
    }
    TabBar.prototype.componentDidMount = function () {
        this.foundation = new mdc_tabBar_1.MDCTabBarFoundation(this.adapter);
        this.foundation.init();
        var _a = this.props, activeIndex = _a.activeIndex, indexInView = _a.indexInView;
        if (this.tabList[activeIndex]) {
            this.tabList[activeIndex].activate({} /* previousIndicatorClientRect */);
        }
        this.foundation.scrollIntoView(indexInView);
    };
    TabBar.prototype.componentDidUpdate = function (prevProps) {
        var _this = this;
        if (this.props.activeIndex !== prevProps.activeIndex) {
            this.setState({ previousActiveIndex: prevProps.activeIndex }, function () {
                return _this.foundation.activateTab(_this.props.activeIndex);
            });
        }
        if (this.props.indexInView !== prevProps.indexInView) {
            this.foundation.scrollIntoView(this.props.indexInView);
        }
    };
    TabBar.prototype.componentWillUnmount = function () {
        this.foundation.destroy();
    };
    Object.defineProperty(TabBar.prototype, "classes", {
        get: function () {
            return classnames_1.default('mdc-tab-bar', this.props.className);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TabBar.prototype, "adapter", {
        get: function () {
            var _this = this;
            return {
                scrollTo: function (scrollX) {
                    _this.tabScrollerRef.current && _this.tabScrollerRef.current.scrollTo(scrollX);
                },
                incrementScroll: function (scrollXIncrement) {
                    _this.tabScrollerRef.current && _this.tabScrollerRef.current.incrementScroll(scrollXIncrement);
                },
                getScrollPosition: function () {
                    if (!_this.tabScrollerRef.current)
                        return;
                    return _this.tabScrollerRef.current.getScrollPosition();
                },
                getScrollContentWidth: function () {
                    if (!_this.tabScrollerRef.current)
                        return;
                    _this.tabScrollerRef.current.getScrollContentWidth();
                },
                getOffsetWidth: function () {
                    if (_this.tabBarRef.current === null)
                        return;
                    return _this.tabBarRef.current.offsetWidth;
                },
                isRTL: function () { return !!_this.props.isRtl; },
                setActiveTab: function (index) {
                    if (!_this.props.handleActiveIndexUpdate)
                        return;
                    _this.props.handleActiveIndexUpdate(index);
                },
                activateTabAtIndex: function (index, clientRect) {
                    return _this.tabList[index].activate(clientRect);
                },
                deactivateTabAtIndex: function (index) { return _this.tabList[index].deactivate(); },
                focusTabAtIndex: function (index) { return _this.tabList[index].focus(); },
                getTabIndicatorClientRectAtIndex: function (index) {
                    return _this.tabList[index].computeIndicatorClientRect();
                },
                getTabDimensionsAtIndex: function (index) {
                    return _this.tabList[index].computeDimensions();
                },
                getPreviousActiveTabIndex: function () { return _this.state.previousActiveIndex; },
                getFocusedTabIndex: function () {
                    var activeElement = document.activeElement;
                    // cannot use findIndex, not supported in IE11
                    // cannot use forEach, return statement inside the forEach loop will not return
                    for (var i = 0; i < _this.tabList.length; i++) {
                        if (_this.tabList[i].tabRef.current === activeElement) {
                            return i;
                        }
                    }
                    return -1;
                },
                getIndexOfTab: function (tabToFind) { return _this.tabList.indexOf(tabToFind); },
                getTabListLength: function () { return _this.tabList.length; },
            };
        },
        enumerable: true,
        configurable: true
    });
    TabBar.prototype.render = function () {
        var _a = this.props, 
        /* eslint-disable no-unused-vars */
        className = _a.className, indexInView = _a.indexInView, activeIndex = _a.activeIndex, handleActiveIndexUpdate = _a.handleActiveIndexUpdate, onKeyDown = _a.onKeyDown, 
        /* eslint-enable no-unused-vars */
        isRtl = _a.isRtl, children = _a.children, otherProps = __rest(_a, ["className", "indexInView", "activeIndex", "handleActiveIndexUpdate", "onKeyDown", "isRtl", "children"]);
        return (React.createElement("div", __assign({ dir: isRtl ? 'rtl' : 'ltr', className: this.classes, role: 'tablist', onKeyDown: this.onKeyDown, ref: this.tabBarRef }, otherProps),
            React.createElement(react_tab_scroller_1.default, { ref: this.tabScrollerRef }, React.Children.map(children, this.renderTab))));
    };
    TabBar.defaultProps = {
        indexInView: 0,
        activeIndex: 0,
        handleActiveIndexUpdate: function () { },
        className: '',
        children: [],
        isRtl: false,
    };
    return TabBar;
}(React.Component));
exports.default = TabBar;


/***/ }),

/***/ 84:
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_84__;

/***/ }),

/***/ 85:
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_85__;

/***/ }),

/***/ 86:
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_86__;

/***/ })

/******/ });
});
//# sourceMappingURL=tab-bar.js.map