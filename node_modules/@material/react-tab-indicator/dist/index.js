(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("classnames"), require("@material/tab-indicator/dist/mdc.tabIndicator.js"));
	else if(typeof define === 'function' && define.amd)
		define(["react", "classnames", "@material/tab-indicator/dist/mdc.tabIndicator.js"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("react"), require("classnames"), require("@material/tab-indicator/dist/mdc.tabIndicator.js")) : factory(root["react"], root["classnames"], root["@material/tab-indicator/dist/mdc.tabIndicator.js"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_79__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 78);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),

/***/ 1:
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }),

/***/ 78:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// The MIT License
//
// Copyright (c) 2018 Google, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(0);
var classnames_1 = __webpack_require__(1);
var mdc_tabIndicator_1 = __webpack_require__(79);
var TabIndicator = /** @class */ (function (_super) {
    __extends(TabIndicator, _super);
    function TabIndicator() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tabIndicatorElement = React.createRef();
        _this.getNativeContentElement = function () {
            if (!_this.tabIndicatorElement.current)
                return;
            // need to use getElementsByClassName since tabIndicator could be
            // a non-semantic element (span, i, etc.). This is a problem since refs to a non semantic elements
            // return the instance of the component.
            return _this.tabIndicatorElement.current.getElementsByClassName('mdc-tab-indicator__content')[0];
        };
        _this.computeContentClientRect = function () {
            var contentElement = _this.getNativeContentElement();
            if (!(contentElement && contentElement.getBoundingClientRect))
                return;
            return contentElement.getBoundingClientRect();
        };
        _this.addContentClassesToChildren = function () {
            var child = React.Children.only(_this.props.children);
            var className = classnames_1.default(child.props.className, _this.contentClasses);
            var props = Object.assign({}, child.props, { className: className });
            return React.cloneElement(child, props);
        };
        return _this;
    }
    TabIndicator.prototype.componentDidMount = function () {
        if (this.props.fade) {
            this.foundation = new mdc_tabIndicator_1.MDCFadingTabIndicatorFoundation(this.adapter);
        }
        else {
            this.foundation = new mdc_tabIndicator_1.MDCSlidingTabIndicatorFoundation(this.adapter);
        }
        this.foundation.init();
        if (this.props.active) {
            this.foundation.activate();
        }
    };
    TabIndicator.prototype.componentWillUnmount = function () {
        this.foundation.destroy();
    };
    TabIndicator.prototype.componentDidUpdate = function (prevProps) {
        if (this.props.active !== prevProps.active) {
            if (this.props.active) {
                this.foundation.activate(this.props.previousIndicatorClientRect);
            }
            else {
                this.foundation.deactivate();
            }
        }
    };
    Object.defineProperty(TabIndicator.prototype, "classes", {
        get: function () {
            var _a = this.props, className = _a.className, fade = _a.fade;
            return classnames_1.default('mdc-tab-indicator', className, {
                'mdc-tab-indicator--fade': fade,
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TabIndicator.prototype, "contentClasses", {
        get: function () {
            var icon = this.props.icon;
            return classnames_1.default('mdc-tab-indicator__content', {
                'mdc-tab-indicator__content--icon': icon,
                'mdc-tab-indicator__content--underline': !icon,
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TabIndicator.prototype, "adapter", {
        get: function () {
            var _this = this;
            return {
                addClass: function (className) {
                    if (!_this.tabIndicatorElement.current)
                        return;
                    // since the sliding indicator depends on the FLIP method,
                    // our regular pattern of managing classes does not work here.
                    // setState is async, which does not work well with the FLIP method
                    // without a requestAnimationFrame, which was done in this PR:
                    // https://github.com/material-components
                    // /material-components-web/pull/3337/files#diff-683d792d28dad99754294121e1afbfb5L62
                    _this.tabIndicatorElement.current.classList.add(className);
                    _this.forceUpdate();
                },
                removeClass: function (className) {
                    if (!_this.tabIndicatorElement.current)
                        return;
                    _this.tabIndicatorElement.current.classList.remove(className);
                    _this.forceUpdate();
                },
                computeContentClientRect: this.computeContentClientRect,
                // setContentStyleProperty was using setState, but due to the method's
                // async nature, its not condusive to the FLIP technique
                setContentStyleProperty: function (prop, value) {
                    var contentElement = _this.getNativeContentElement();
                    // length and parentRule are readonly properties of CSSStyleDeclaration that
                    // cannot be set
                    if (!contentElement || prop === 'length' || prop === 'parentRule') {
                        return;
                    }
                    // https://github.com/Microsoft/TypeScript/issues/11914
                    contentElement.style[prop] = value;
                },
            };
        },
        enumerable: true,
        configurable: true
    });
    TabIndicator.prototype.render = function () {
        var _a = this.props, 
        /* eslint-disable */
        active = _a.active, children = _a.children, className = _a.className, fade = _a.fade, icon = _a.icon, previousIndicatorClientRect = _a.previousIndicatorClientRect, 
        /* eslint-enable */
        otherProps = __rest(_a, ["active", "children", "className", "fade", "icon", "previousIndicatorClientRect"]);
        return (React.createElement("span", __assign({ className: this.classes, ref: this.tabIndicatorElement }, otherProps), this.renderContent()));
    };
    TabIndicator.prototype.renderContent = function () {
        if (this.props.children) {
            return this.addContentClassesToChildren();
        }
        return React.createElement("span", { className: this.contentClasses });
    };
    TabIndicator.defaultProps = {
        active: false,
        className: '',
        fade: false,
        icon: false,
    };
    return TabIndicator;
}(React.Component));
exports.default = TabIndicator;


/***/ }),

/***/ 79:
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_79__;

/***/ })

/******/ });
});
//# sourceMappingURL=tab-indicator.js.map