{"ast":null,"code":"/*!\n Material Components for the Web\n Copyright (c) 2018 Google Inc.\n License: MIT\n*/\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"tabScroller\"] = factory();else root[\"mdc\"] = root[\"mdc\"] || {}, root[\"mdc\"][\"tabScroller\"] = factory();\n})(this, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            /******/\n            configurable: false,\n\n            /******/\n            enumerable: true,\n\n            /******/\n            get: getter\n            /******/\n\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 55);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    {\n      /***/\n      0:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        var _createClass = function () {\n          function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n\n          return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n          };\n        }();\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n        /**\n         * @license\n         * Copyright 2016 Google Inc.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in\n         * all copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n         * THE SOFTWARE.\n         */\n\n        /**\n         * @template A\n         */\n\n\n        var MDCFoundation = function () {\n          _createClass(MDCFoundation, null, [{\n            key: \"cssClasses\",\n\n            /** @return enum{cssClasses} */\n            get: function get() {\n              // Classes extending MDCFoundation should implement this method to return an object which exports every\n              // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n              return {};\n            }\n            /** @return enum{strings} */\n\n          }, {\n            key: \"strings\",\n            get: function get() {\n              // Classes extending MDCFoundation should implement this method to return an object which exports all\n              // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n              return {};\n            }\n            /** @return enum{numbers} */\n\n          }, {\n            key: \"numbers\",\n            get: function get() {\n              // Classes extending MDCFoundation should implement this method to return an object which exports all\n              // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n              return {};\n            }\n            /** @return {!Object} */\n\n          }, {\n            key: \"defaultAdapter\",\n            get: function get() {\n              // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n              // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n              // validation.\n              return {};\n            }\n            /**\n             * @param {A=} adapter\n             */\n\n          }]);\n\n          function MDCFoundation() {\n            var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            _classCallCheck(this, MDCFoundation);\n            /** @protected {!A} */\n\n\n            this.adapter_ = adapter;\n          }\n\n          _createClass(MDCFoundation, [{\n            key: \"init\",\n            value: function init() {// Subclasses should override this method to perform initialization routines (registering events, etc.)\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {// Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n            }\n          }]);\n\n          return MDCFoundation;\n        }();\n        /* harmony default export */\n\n\n        __webpack_exports__[\"a\"] = MDCFoundation;\n        /***/\n      },\n\n      /***/\n      1:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n        /* harmony import */\n\n        var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0);\n\n        var _createClass = function () {\n          function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n\n          return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n          };\n        }();\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n        /**\n         * @license\n         * Copyright 2016 Google Inc.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in\n         * all copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n         * THE SOFTWARE.\n         */\n\n        /**\n         * @template F\n         */\n\n\n        var MDCComponent = function () {\n          _createClass(MDCComponent, null, [{\n            key: 'attachTo',\n\n            /**\n             * @param {!Element} root\n             * @return {!MDCComponent}\n             */\n            value: function attachTo(root) {\n              // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n              // returns an instantiated component with its root set to that element. Also note that in the cases of\n              // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n              // from getDefaultFoundation().\n              return new MDCComponent(root, new __WEBPACK_IMPORTED_MODULE_0__foundation__[\"a\"\n              /* default */\n              ]());\n            }\n            /**\n             * @param {!Element} root\n             * @param {F=} foundation\n             * @param {...?} args\n             */\n\n          }]);\n\n          function MDCComponent(root) {\n            var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n            _classCallCheck(this, MDCComponent);\n            /** @protected {!Element} */\n\n\n            this.root_ = root;\n\n            for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n              args[_key - 2] = arguments[_key];\n            }\n\n            this.initialize.apply(this, args); // Note that we initialize foundation here and not within the constructor's default param so that\n            // this.root_ is defined and can be used within the foundation class.\n\n            /** @protected {!F} */\n\n            this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n            this.foundation_.init();\n            this.initialSyncWithDOM();\n          }\n\n          _createClass(MDCComponent, [{\n            key: 'initialize',\n            value: function initialize()\n            /* ...args */\n            {} // Subclasses can override this to do any additional setup work that would be considered part of a\n            // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n            // initialized. Any additional arguments besides root and foundation will be passed in here.\n\n            /**\n             * @return {!F} foundation\n             */\n\n          }, {\n            key: 'getDefaultFoundation',\n            value: function getDefaultFoundation() {\n              // Subclasses must override this method to return a properly configured foundation class for the\n              // component.\n              throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');\n            }\n          }, {\n            key: 'initialSyncWithDOM',\n            value: function initialSyncWithDOM() {// Subclasses should override this method if they need to perform work to synchronize with a host DOM\n              // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n              // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n              // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n            }\n          }, {\n            key: 'destroy',\n            value: function destroy() {\n              // Subclasses may implement this method to release any resources / deregister any listeners they have\n              // attached. An example of this might be deregistering a resize event from the window object.\n              this.foundation_.destroy();\n            }\n            /**\n             * Wrapper method to add an event listener to the component's root element. This is most useful when\n             * listening for custom events.\n             * @param {string} evtType\n             * @param {!Function} handler\n             */\n\n          }, {\n            key: 'listen',\n            value: function listen(evtType, handler) {\n              this.root_.addEventListener(evtType, handler);\n            }\n            /**\n             * Wrapper method to remove an event listener to the component's root element. This is most useful when\n             * unlistening for custom events.\n             * @param {string} evtType\n             * @param {!Function} handler\n             */\n\n          }, {\n            key: 'unlisten',\n            value: function unlisten(evtType, handler) {\n              this.root_.removeEventListener(evtType, handler);\n            }\n            /**\n             * Fires a cross-browser-compatible custom event from the component root of the given type,\n             * with the given data.\n             * @param {string} evtType\n             * @param {!Object} evtData\n             * @param {boolean=} shouldBubble\n             */\n\n          }, {\n            key: 'emit',\n            value: function emit(evtType, evtData) {\n              var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n              var evt = void 0;\n\n              if (typeof CustomEvent === 'function') {\n                evt = new CustomEvent(evtType, {\n                  detail: evtData,\n                  bubbles: shouldBubble\n                });\n              } else {\n                evt = document.createEvent('CustomEvent');\n                evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n              }\n\n              this.root_.dispatchEvent(evt);\n            }\n          }]);\n\n          return MDCComponent;\n        }();\n        /* harmony default export */\n\n\n        __webpack_exports__[\"a\"] = MDCComponent;\n        /***/\n      },\n\n      /***/\n      18:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n        /* harmony import */\n\n        var __WEBPACK_IMPORTED_MODULE_0__adapter__ = __webpack_require__(9);\n\n        var _createClass = function () {\n          function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n\n          return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n          };\n        }();\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n        /**\n         * @license\n         * Copyright 2018 Google Inc.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in\n         * all copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n         * THE SOFTWARE.\n         */\n\n        /* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n        /* eslint-disable no-unused-vars */\n\n        /* eslint-enable no-unused-vars */\n\n        /**\n         * @abstract\n         */\n\n\n        var MDCTabScrollerRTL = function () {\n          /** @param {!MDCTabScrollerAdapter} adapter */\n          function MDCTabScrollerRTL(adapter) {\n            _classCallCheck(this, MDCTabScrollerRTL);\n            /** @private */\n\n\n            this.adapter_ = adapter;\n          }\n          /**\n           * @param {number} translateX The current translateX position\n           * @return {number}\n           * @abstract\n           */\n\n\n          _createClass(MDCTabScrollerRTL, [{\n            key: 'getScrollPositionRTL',\n            value: function getScrollPositionRTL(translateX) {}\n            /**\n             * @param {number} scrollX\n             * @return {!MDCTabScrollerAnimation}\n             * @abstract\n             */\n\n          }, {\n            key: 'scrollToRTL',\n            value: function scrollToRTL(scrollX) {}\n            /**\n             * @param {number} scrollX\n             * @return {!MDCTabScrollerAnimation}\n             * @abstract\n             */\n\n          }, {\n            key: 'incrementScrollRTL',\n            value: function incrementScrollRTL(scrollX) {}\n            /**\n             * @param {number} scrollX The current scrollX position\n             * @param {number} translateX The current translateX position\n             * @return {number}\n             * @abstract\n             */\n\n          }, {\n            key: 'getAnimatingScrollPosition',\n            value: function getAnimatingScrollPosition(scrollX, translateX) {}\n          }]);\n\n          return MDCTabScrollerRTL;\n        }();\n        /* harmony default export */\n\n\n        __webpack_exports__[\"a\"] = MDCTabScrollerRTL;\n        /***/\n      },\n\n      /***/\n      42:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n        /* harmony export (binding) */\n\n        __webpack_require__.d(__webpack_exports__, \"a\", function () {\n          return cssClasses;\n        });\n        /* harmony export (binding) */\n\n\n        __webpack_require__.d(__webpack_exports__, \"b\", function () {\n          return strings;\n        });\n        /**\n         * @license\n         * Copyright 2018 Google Inc.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in\n         * all copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n         * THE SOFTWARE.\n         */\n\n        /** @enum {string} */\n\n\n        var cssClasses = {\n          ANIMATING: 'mdc-tab-scroller--animating',\n          SCROLL_TEST: 'mdc-tab-scroller__test',\n          SCROLL_AREA_SCROLL: 'mdc-tab-scroller__scroll-area--scroll'\n        };\n        /** @enum {string} */\n\n        var strings = {\n          AREA_SELECTOR: '.mdc-tab-scroller__scroll-area',\n          CONTENT_SELECTOR: '.mdc-tab-scroller__scroll-content'\n        };\n        /***/\n      },\n\n      /***/\n      55:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(__webpack_exports__, \"__esModule\", {\n          value: true\n        });\n        /* harmony export (binding) */\n\n        __webpack_require__.d(__webpack_exports__, \"MDCTabScroller\", function () {\n          return MDCTabScroller;\n        });\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(1);\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(9);\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(56);\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(60);\n        /* harmony reexport (binding) */\n\n\n        __webpack_require__.d(__webpack_exports__, \"MDCTabScrollerFoundation\", function () {\n          return __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"];\n        });\n        /* harmony reexport (module object) */\n\n\n        __webpack_require__.d(__webpack_exports__, \"util\", function () {\n          return __WEBPACK_IMPORTED_MODULE_3__util__;\n        });\n\n        var _get = function get(object, property, receiver) {\n          if (object === null) object = Function.prototype;\n          var desc = Object.getOwnPropertyDescriptor(object, property);\n\n          if (desc === undefined) {\n            var parent = Object.getPrototypeOf(object);\n\n            if (parent === null) {\n              return undefined;\n            } else {\n              return get(parent, property, receiver);\n            }\n          } else if (\"value\" in desc) {\n            return desc.value;\n          } else {\n            var getter = desc.get;\n\n            if (getter === undefined) {\n              return undefined;\n            }\n\n            return getter.call(receiver);\n          }\n        };\n\n        var _createClass = function () {\n          function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n\n          return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n          };\n        }();\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function _possibleConstructorReturn(self, call) {\n          if (!self) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          }\n\n          return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n        }\n\n        function _inherits(subClass, superClass) {\n          if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n          }\n\n          subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n              value: subClass,\n              enumerable: false,\n              writable: true,\n              configurable: true\n            }\n          });\n          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n        }\n        /**\n         * @license\n         * Copyright 2018 Google Inc.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in\n         * all copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n         * THE SOFTWARE.\n         */\n\n        /**\n         * @extends {MDCComponent<!MDCTabScrollerFoundation>}\n         * @final\n         */\n\n\n        var MDCTabScroller = function (_MDCComponent) {\n          _inherits(MDCTabScroller, _MDCComponent);\n\n          _createClass(MDCTabScroller, null, [{\n            key: 'attachTo',\n\n            /**\n             * @param {!Element} root\n             * @return {!MDCTabScroller}\n             */\n            value: function attachTo(root) {\n              return new MDCTabScroller(root);\n            }\n          }]);\n\n          function MDCTabScroller() {\n            var _ref;\n\n            _classCallCheck(this, MDCTabScroller);\n\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n            /** @private {?Element} */\n\n\n            var _this = _possibleConstructorReturn(this, (_ref = MDCTabScroller.__proto__ || Object.getPrototypeOf(MDCTabScroller)).call.apply(_ref, [this].concat(args)));\n\n            _this.content_;\n            /** @private {?Element} */\n\n            _this.area_;\n            /** @private {?function(?Event): undefined} */\n\n            _this.handleInteraction_;\n            /** @private {?function(!Event): undefined} */\n\n            _this.handleTransitionEnd_;\n            return _this;\n          }\n\n          _createClass(MDCTabScroller, [{\n            key: 'initialize',\n            value: function initialize() {\n              this.area_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"\n              /* default */\n              ].strings.AREA_SELECTOR);\n              this.content_ = this.root_.querySelector(__WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"\n              /* default */\n              ].strings.CONTENT_SELECTOR);\n            }\n          }, {\n            key: 'initialSyncWithDOM',\n            value: function initialSyncWithDOM() {\n              var _this2 = this;\n\n              this.handleInteraction_ = function () {\n                return _this2.foundation_.handleInteraction();\n              };\n\n              this.handleTransitionEnd_ = function (evt) {\n                return _this2.foundation_.handleTransitionEnd(evt);\n              };\n\n              this.area_.addEventListener('wheel', this.handleInteraction_);\n              this.area_.addEventListener('touchstart', this.handleInteraction_);\n              this.area_.addEventListener('pointerdown', this.handleInteraction_);\n              this.area_.addEventListener('mousedown', this.handleInteraction_);\n              this.area_.addEventListener('keydown', this.handleInteraction_);\n              this.content_.addEventListener('transitionend', this.handleTransitionEnd_);\n            }\n          }, {\n            key: 'destroy',\n            value: function destroy() {\n              _get(MDCTabScroller.prototype.__proto__ || Object.getPrototypeOf(MDCTabScroller.prototype), 'destroy', this).call(this);\n\n              this.area_.removeEventListener('wheel', this.handleInteraction_);\n              this.area_.removeEventListener('touchstart', this.handleInteraction_);\n              this.area_.removeEventListener('pointerdown', this.handleInteraction_);\n              this.area_.removeEventListener('mousedown', this.handleInteraction_);\n              this.area_.removeEventListener('keydown', this.handleInteraction_);\n              this.content_.removeEventListener('transitionend', this.handleTransitionEnd_);\n            }\n            /**\n             * @return {!MDCTabScrollerFoundation}\n             */\n\n          }, {\n            key: 'getDefaultFoundation',\n            value: function getDefaultFoundation() {\n              var _this3 = this;\n\n              var adapter =\n              /** @type {!MDCTabScrollerAdapter} */\n              {\n                eventTargetMatchesSelector: function eventTargetMatchesSelector(evtTarget, selector) {\n                  var MATCHES = __WEBPACK_IMPORTED_MODULE_3__util__[\"getMatchesProperty\"](HTMLElement.prototype);\n\n                  return evtTarget[MATCHES](selector);\n                },\n                addClass: function addClass(className) {\n                  return _this3.root_.classList.add(className);\n                },\n                removeClass: function removeClass(className) {\n                  return _this3.root_.classList.remove(className);\n                },\n                addScrollAreaClass: function addScrollAreaClass(className) {\n                  return _this3.area_.classList.add(className);\n                },\n                setScrollAreaStyleProperty: function setScrollAreaStyleProperty(prop, value) {\n                  return _this3.area_.style.setProperty(prop, value);\n                },\n                setScrollContentStyleProperty: function setScrollContentStyleProperty(prop, value) {\n                  return _this3.content_.style.setProperty(prop, value);\n                },\n                getScrollContentStyleValue: function getScrollContentStyleValue(propName) {\n                  return window.getComputedStyle(_this3.content_).getPropertyValue(propName);\n                },\n                setScrollAreaScrollLeft: function setScrollAreaScrollLeft(scrollX) {\n                  return _this3.area_.scrollLeft = scrollX;\n                },\n                getScrollAreaScrollLeft: function getScrollAreaScrollLeft() {\n                  return _this3.area_.scrollLeft;\n                },\n                getScrollContentOffsetWidth: function getScrollContentOffsetWidth() {\n                  return _this3.content_.offsetWidth;\n                },\n                getScrollAreaOffsetWidth: function getScrollAreaOffsetWidth() {\n                  return _this3.area_.offsetWidth;\n                },\n                computeScrollAreaClientRect: function computeScrollAreaClientRect() {\n                  return _this3.area_.getBoundingClientRect();\n                },\n                computeScrollContentClientRect: function computeScrollContentClientRect() {\n                  return _this3.content_.getBoundingClientRect();\n                },\n                computeHorizontalScrollbarHeight: function computeHorizontalScrollbarHeight() {\n                  return __WEBPACK_IMPORTED_MODULE_3__util__[\"computeHorizontalScrollbarHeight\"](document);\n                }\n              };\n              return new __WEBPACK_IMPORTED_MODULE_2__foundation__[\"a\"\n              /* default */\n              ](adapter);\n            }\n            /**\n             * Returns the current visual scroll position\n             * @return {number}\n             */\n\n          }, {\n            key: 'getScrollPosition',\n            value: function getScrollPosition() {\n              return this.foundation_.getScrollPosition();\n            }\n            /**\n             * Returns the width of the scroll content\n             * @return {number}\n             */\n\n          }, {\n            key: 'getScrollContentWidth',\n            value: function getScrollContentWidth() {\n              return this.content_.offsetWidth;\n            }\n            /**\n             * Increments the scroll value by the given amount\n             * @param {number} scrollXIncrement The pixel value by which to increment the scroll value\n             */\n\n          }, {\n            key: 'incrementScroll',\n            value: function incrementScroll(scrollXIncrement) {\n              this.foundation_.incrementScroll(scrollXIncrement);\n            }\n            /**\n             * Scrolls to the given pixel position\n             * @param {number} scrollX The pixel value to scroll to\n             */\n\n          }, {\n            key: 'scrollTo',\n            value: function scrollTo(scrollX) {\n              this.foundation_.scrollTo(scrollX);\n            }\n          }]);\n\n          return MDCTabScroller;\n        }(__WEBPACK_IMPORTED_MODULE_0__material_base_component__[\"a\"\n        /* default */\n        ]);\n        /***/\n\n      },\n\n      /***/\n      56:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n        /* harmony import */\n\n        var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(0);\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(42);\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_2__adapter__ = __webpack_require__(9);\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_3__rtl_scroller__ = __webpack_require__(18);\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_4__rtl_default_scroller__ = __webpack_require__(57);\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_5__rtl_negative_scroller__ = __webpack_require__(58);\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_6__rtl_reverse_scroller__ = __webpack_require__(59);\n\n        var _extends = Object.assign || function (target) {\n          for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            for (var key in source) {\n              if (Object.prototype.hasOwnProperty.call(source, key)) {\n                target[key] = source[key];\n              }\n            }\n          }\n\n          return target;\n        };\n\n        var _createClass = function () {\n          function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n\n          return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n          };\n        }();\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function _possibleConstructorReturn(self, call) {\n          if (!self) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          }\n\n          return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n        }\n\n        function _inherits(subClass, superClass) {\n          if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n          }\n\n          subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n              value: subClass,\n              enumerable: false,\n              writable: true,\n              configurable: true\n            }\n          });\n          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n        }\n        /**\n         * @license\n         * Copyright 2018 Google Inc.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in\n         * all copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n         * THE SOFTWARE.\n         */\n\n        /* eslint-disable no-unused-vars */\n\n        /* eslint-enable no-unused-vars */\n\n        /**\n         * @extends {MDCFoundation<!MDCTabScrollerAdapter>}\n         * @final\n         */\n\n\n        var MDCTabScrollerFoundation = function (_MDCFoundation) {\n          _inherits(MDCTabScrollerFoundation, _MDCFoundation);\n\n          _createClass(MDCTabScrollerFoundation, null, [{\n            key: 'cssClasses',\n\n            /** @return enum {string} */\n            get: function get() {\n              return __WEBPACK_IMPORTED_MODULE_1__constants__[\"a\"\n              /* cssClasses */\n              ];\n            }\n            /** @return enum {string} */\n\n          }, {\n            key: 'strings',\n            get: function get() {\n              return __WEBPACK_IMPORTED_MODULE_1__constants__[\"b\"\n              /* strings */\n              ];\n            }\n            /**\n             * @see MDCTabScrollerAdapter for typing information\n             * @return {!MDCTabScrollerAdapter}\n             */\n\n          }, {\n            key: 'defaultAdapter',\n            get: function get() {\n              return (\n                /** @type {!MDCTabScrollerAdapter} */\n                {\n                  eventTargetMatchesSelector: function eventTargetMatchesSelector() {},\n                  addClass: function addClass() {},\n                  removeClass: function removeClass() {},\n                  addScrollAreaClass: function addScrollAreaClass() {},\n                  setScrollAreaStyleProperty: function setScrollAreaStyleProperty() {},\n                  setScrollContentStyleProperty: function setScrollContentStyleProperty() {},\n                  getScrollContentStyleValue: function getScrollContentStyleValue() {},\n                  setScrollAreaScrollLeft: function setScrollAreaScrollLeft() {},\n                  getScrollAreaScrollLeft: function getScrollAreaScrollLeft() {},\n                  getScrollContentOffsetWidth: function getScrollContentOffsetWidth() {},\n                  getScrollAreaOffsetWidth: function getScrollAreaOffsetWidth() {},\n                  computeScrollAreaClientRect: function computeScrollAreaClientRect() {},\n                  computeScrollContentClientRect: function computeScrollContentClientRect() {},\n                  computeHorizontalScrollbarHeight: function computeHorizontalScrollbarHeight() {}\n                }\n              );\n            }\n            /** @param {!MDCTabScrollerAdapter} adapter */\n\n          }]);\n\n          function MDCTabScrollerFoundation(adapter) {\n            _classCallCheck(this, MDCTabScrollerFoundation);\n            /**\n             * This boolean controls whether we should handle the transitionend and interaction events during the animation.\n             * @private {boolean}\n             */\n\n\n            var _this = _possibleConstructorReturn(this, (MDCTabScrollerFoundation.__proto__ || Object.getPrototypeOf(MDCTabScrollerFoundation)).call(this, _extends(MDCTabScrollerFoundation.defaultAdapter, adapter)));\n\n            _this.isAnimating_ = false;\n            /**\n             * The MDCTabScrollerRTL instance varies per browser and allows us to encapsulate the peculiar browser behavior\n             * of RTL scrolling in it's own class.\n             * @private {?MDCTabScrollerRTL}\n             */\n\n            _this.rtlScrollerInstance_;\n            return _this;\n          }\n\n          _createClass(MDCTabScrollerFoundation, [{\n            key: 'init',\n            value: function init() {\n              // Compute horizontal scrollbar height on scroller with overflow initially hidden, then update overflow to scroll\n              // and immediately adjust bottom margin to avoid the scrollbar initially appearing before JS runs.\n              var horizontalScrollbarHeight = this.adapter_.computeHorizontalScrollbarHeight();\n              this.adapter_.setScrollAreaStyleProperty('margin-bottom', -horizontalScrollbarHeight + 'px');\n              this.adapter_.addScrollAreaClass(MDCTabScrollerFoundation.cssClasses.SCROLL_AREA_SCROLL);\n            }\n            /**\n             * Computes the current visual scroll position\n             * @return {number}\n             */\n\n          }, {\n            key: 'getScrollPosition',\n            value: function getScrollPosition() {\n              if (this.isRTL_()) {\n                return this.computeCurrentScrollPositionRTL_();\n              }\n\n              var currentTranslateX = this.calculateCurrentTranslateX_();\n              var scrollLeft = this.adapter_.getScrollAreaScrollLeft();\n              return scrollLeft - currentTranslateX;\n            }\n            /**\n             * Handles interaction events that occur during transition\n             */\n\n          }, {\n            key: 'handleInteraction',\n            value: function handleInteraction() {\n              // Early exit if we aren't animating\n              if (!this.isAnimating_) {\n                return;\n              } // Prevent other event listeners from handling this event\n\n\n              this.stopScrollAnimation_();\n            }\n            /**\n             * Handles the transitionend event\n             * @param {!Event} evt\n             */\n\n          }, {\n            key: 'handleTransitionEnd',\n            value: function handleTransitionEnd(evt) {\n              // Early exit if we aren't animating or the event was triggered by a different element.\n              if (!this.isAnimating_ || !this.adapter_.eventTargetMatchesSelector(evt.target, MDCTabScrollerFoundation.strings.CONTENT_SELECTOR)) {\n                return;\n              }\n\n              this.isAnimating_ = false;\n              this.adapter_.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n            }\n            /**\n             * Increment the scroll value by the scrollXIncrement\n             * @param {number} scrollXIncrement The value by which to increment the scroll position\n             */\n\n          }, {\n            key: 'incrementScroll',\n            value: function incrementScroll(scrollXIncrement) {\n              // Early exit for non-operational increment values\n              if (scrollXIncrement === 0) {\n                return;\n              }\n\n              if (this.isRTL_()) {\n                return this.incrementScrollRTL_(scrollXIncrement);\n              }\n\n              this.incrementScroll_(scrollXIncrement);\n            }\n            /**\n             * Scrolls to the given scrollX value\n             * @param {number} scrollX\n             */\n\n          }, {\n            key: 'scrollTo',\n            value: function scrollTo(scrollX) {\n              if (this.isRTL_()) {\n                return this.scrollToRTL_(scrollX);\n              }\n\n              this.scrollTo_(scrollX);\n            }\n            /**\n             * Returns the appropriate version of the MDCTabScrollerRTL\n             * @return {!MDCTabScrollerRTL}\n             */\n\n          }, {\n            key: 'getRTLScroller',\n            value: function getRTLScroller() {\n              if (!this.rtlScrollerInstance_) {\n                this.rtlScrollerInstance_ = this.rtlScrollerFactory_();\n              }\n\n              return this.rtlScrollerInstance_;\n            }\n            /**\n             * Returns the translateX value from a CSS matrix transform function string\n             * @return {number}\n             * @private\n             */\n\n          }, {\n            key: 'calculateCurrentTranslateX_',\n            value: function calculateCurrentTranslateX_() {\n              var transformValue = this.adapter_.getScrollContentStyleValue('transform'); // Early exit if no transform is present\n\n              if (transformValue === 'none') {\n                return 0;\n              } // The transform value comes back as a matrix transformation in the form\n              // of `matrix(a, b, c, d, tx, ty)`. We only care about tx (translateX) so\n              // we're going to grab all the parenthesized values, strip out tx, and\n              // parse it.\n\n\n              var results = /\\((.+)\\)/.exec(transformValue)[1];\n              var parts = results.split(',');\n              return parseFloat(parts[4]);\n            }\n            /**\n             * Calculates a safe scroll value that is > 0 and < the max scroll value\n             * @param {number} scrollX The distance to scroll\n             * @return {number}\n             * @private\n             */\n\n          }, {\n            key: 'clampScrollValue_',\n            value: function clampScrollValue_(scrollX) {\n              var edges = this.calculateScrollEdges_();\n              return Math.min(Math.max(edges.left, scrollX), edges.right);\n            }\n            /**\n             * @return {number}\n             * @private\n             */\n\n          }, {\n            key: 'computeCurrentScrollPositionRTL_',\n            value: function computeCurrentScrollPositionRTL_() {\n              var translateX = this.calculateCurrentTranslateX_();\n              return this.getRTLScroller().getScrollPositionRTL(translateX);\n            }\n            /**\n             * @return {!MDCTabScrollerHorizontalEdges}\n             * @private\n             */\n\n          }, {\n            key: 'calculateScrollEdges_',\n            value: function calculateScrollEdges_() {\n              var contentWidth = this.adapter_.getScrollContentOffsetWidth();\n              var rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n              return (\n                /** @type {!MDCTabScrollerHorizontalEdges} */\n                {\n                  left: 0,\n                  right: contentWidth - rootWidth\n                }\n              );\n            }\n            /**\n             * Internal scroll method\n             * @param {number} scrollX The new scroll position\n             * @private\n             */\n\n          }, {\n            key: 'scrollTo_',\n            value: function scrollTo_(scrollX) {\n              var currentScrollX = this.getScrollPosition();\n              var safeScrollX = this.clampScrollValue_(scrollX);\n              var scrollDelta = safeScrollX - currentScrollX;\n              this.animate_(\n              /** @type {!MDCTabScrollerAnimation} */\n              {\n                finalScrollPosition: safeScrollX,\n                scrollDelta: scrollDelta\n              });\n            }\n            /**\n             * Internal RTL scroll method\n             * @param {number} scrollX The new scroll position\n             * @private\n             */\n\n          }, {\n            key: 'scrollToRTL_',\n            value: function scrollToRTL_(scrollX) {\n              var animation = this.getRTLScroller().scrollToRTL(scrollX);\n              this.animate_(animation);\n            }\n            /**\n             * Internal increment scroll method\n             * @param {number} scrollX The new scroll position increment\n             * @private\n             */\n\n          }, {\n            key: 'incrementScroll_',\n            value: function incrementScroll_(scrollX) {\n              var currentScrollX = this.getScrollPosition();\n              var targetScrollX = scrollX + currentScrollX;\n              var safeScrollX = this.clampScrollValue_(targetScrollX);\n              var scrollDelta = safeScrollX - currentScrollX;\n              this.animate_(\n              /** @type {!MDCTabScrollerAnimation} */\n              {\n                finalScrollPosition: safeScrollX,\n                scrollDelta: scrollDelta\n              });\n            }\n            /**\n             * Internal incremenet scroll RTL method\n             * @param {number} scrollX The new scroll position RTL increment\n             * @private\n             */\n\n          }, {\n            key: 'incrementScrollRTL_',\n            value: function incrementScrollRTL_(scrollX) {\n              var animation = this.getRTLScroller().incrementScrollRTL(scrollX);\n              this.animate_(animation);\n            }\n            /**\n             * Animates the tab scrolling\n             * @param {!MDCTabScrollerAnimation} animation The animation to apply\n             * @private\n             */\n\n          }, {\n            key: 'animate_',\n            value: function animate_(animation) {\n              var _this2 = this; // Early exit if translateX is 0, which means there's no animation to perform\n\n\n              if (animation.scrollDelta === 0) {\n                return;\n              }\n\n              this.stopScrollAnimation_(); // This animation uses the FLIP approach.\n              // Read more here: https://aerotwist.com/blog/flip-your-animations/\n\n              this.adapter_.setScrollAreaScrollLeft(animation.finalScrollPosition);\n              this.adapter_.setScrollContentStyleProperty('transform', 'translateX(' + animation.scrollDelta + 'px)'); // Force repaint\n\n              this.adapter_.computeScrollAreaClientRect();\n              requestAnimationFrame(function () {\n                _this2.adapter_.addClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n\n                _this2.adapter_.setScrollContentStyleProperty('transform', 'none');\n              });\n              this.isAnimating_ = true;\n            }\n            /**\n             * Stops scroll animation\n             * @private\n             */\n\n          }, {\n            key: 'stopScrollAnimation_',\n            value: function stopScrollAnimation_() {\n              this.isAnimating_ = false;\n              var currentScrollPosition = this.getAnimatingScrollPosition_();\n              this.adapter_.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n              this.adapter_.setScrollContentStyleProperty('transform', 'translateX(0px)');\n              this.adapter_.setScrollAreaScrollLeft(currentScrollPosition);\n            }\n            /**\n             * Gets the current scroll position during animation\n             * @return {number}\n             * @private\n             */\n\n          }, {\n            key: 'getAnimatingScrollPosition_',\n            value: function getAnimatingScrollPosition_() {\n              var currentTranslateX = this.calculateCurrentTranslateX_();\n              var scrollLeft = this.adapter_.getScrollAreaScrollLeft();\n\n              if (this.isRTL_()) {\n                return this.getRTLScroller().getAnimatingScrollPosition(scrollLeft, currentTranslateX);\n              }\n\n              return scrollLeft - currentTranslateX;\n            }\n            /**\n             * Determines the RTL Scroller to use\n             * @return {!MDCTabScrollerRTL}\n             * @private\n             */\n\n          }, {\n            key: 'rtlScrollerFactory_',\n            value: function rtlScrollerFactory_() {\n              // Browsers have three different implementations of scrollLeft in RTL mode,\n              // dependent on the browser. The behavior is based off the max LTR\n              // scrollleft value and 0.\n              //\n              // * Default scrolling in RTL *\n              //    - Left-most value: 0\n              //    - Right-most value: Max LTR scrollLeft value\n              //\n              // * Negative scrolling in RTL *\n              //    - Left-most value: Negated max LTR scrollLeft value\n              //    - Right-most value: 0\n              //\n              // * Reverse scrolling in RTL *\n              //    - Left-most value: Max LTR scrollLeft value\n              //    - Right-most value: 0\n              //\n              // We use those principles below to determine which RTL scrollLeft\n              // behavior is implemented in the current browser.\n              var initialScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n              this.adapter_.setScrollAreaScrollLeft(initialScrollLeft - 1);\n              var newScrollLeft = this.adapter_.getScrollAreaScrollLeft(); // If the newScrollLeft value is negative,then we know that the browser has\n              // implemented negative RTL scrolling, since all other implementations have\n              // only positive values.\n\n              if (newScrollLeft < 0) {\n                // Undo the scrollLeft test check\n                this.adapter_.setScrollAreaScrollLeft(initialScrollLeft);\n                return new __WEBPACK_IMPORTED_MODULE_5__rtl_negative_scroller__[\"a\"\n                /* default */\n                ](this.adapter_);\n              }\n\n              var rootClientRect = this.adapter_.computeScrollAreaClientRect();\n              var contentClientRect = this.adapter_.computeScrollContentClientRect();\n              var rightEdgeDelta = Math.round(contentClientRect.right - rootClientRect.right); // Undo the scrollLeft test check\n\n              this.adapter_.setScrollAreaScrollLeft(initialScrollLeft); // By calculating the clientRect of the root element and the clientRect of\n              // the content element, we can determine how much the scroll value changed\n              // when we performed the scrollLeft subtraction above.\n\n              if (rightEdgeDelta === newScrollLeft) {\n                return new __WEBPACK_IMPORTED_MODULE_6__rtl_reverse_scroller__[\"a\"\n                /* default */\n                ](this.adapter_);\n              }\n\n              return new __WEBPACK_IMPORTED_MODULE_4__rtl_default_scroller__[\"a\"\n              /* default */\n              ](this.adapter_);\n            }\n            /**\n             * @return {boolean}\n             * @private\n             */\n\n          }, {\n            key: 'isRTL_',\n            value: function isRTL_() {\n              return this.adapter_.getScrollContentStyleValue('direction') === 'rtl';\n            }\n          }]);\n\n          return MDCTabScrollerFoundation;\n        }(__WEBPACK_IMPORTED_MODULE_0__material_base_foundation__[\"a\"\n        /* default */\n        ]);\n        /* harmony default export */\n\n\n        __webpack_exports__[\"a\"] = MDCTabScrollerFoundation;\n        /***/\n      },\n\n      /***/\n      57:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n        /* harmony import */\n\n        var __WEBPACK_IMPORTED_MODULE_0__rtl_scroller__ = __webpack_require__(18);\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(9);\n\n        var _createClass = function () {\n          function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n\n          return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n          };\n        }();\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function _possibleConstructorReturn(self, call) {\n          if (!self) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          }\n\n          return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n        }\n\n        function _inherits(subClass, superClass) {\n          if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n          }\n\n          subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n              value: subClass,\n              enumerable: false,\n              writable: true,\n              configurable: true\n            }\n          });\n          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n        }\n        /**\n         * @license\n         * Copyright 2018 Google Inc.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in\n         * all copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n         * THE SOFTWARE.\n         */\n\n        /* eslint-disable no-unused-vars */\n\n        /* eslint-enable no-unused-vars */\n\n        /**\n         * @extends {MDCTabScrollerRTL}\n         * @final\n         */\n\n\n        var MDCTabScrollerRTLDefault = function (_MDCTabScrollerRTL) {\n          _inherits(MDCTabScrollerRTLDefault, _MDCTabScrollerRTL);\n\n          function MDCTabScrollerRTLDefault() {\n            _classCallCheck(this, MDCTabScrollerRTLDefault);\n\n            return _possibleConstructorReturn(this, (MDCTabScrollerRTLDefault.__proto__ || Object.getPrototypeOf(MDCTabScrollerRTLDefault)).apply(this, arguments));\n          }\n\n          _createClass(MDCTabScrollerRTLDefault, [{\n            key: 'getScrollPositionRTL',\n\n            /**\n             * @return {number}\n             */\n            value: function getScrollPositionRTL() {\n              var currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n\n              var _calculateScrollEdges = this.calculateScrollEdges_(),\n                  right = _calculateScrollEdges.right; // Scroll values on most browsers are ints instead of floats so we round\n\n\n              return Math.round(right - currentScrollLeft);\n            }\n            /**\n             * @param {number} scrollX\n             * @return {!MDCTabScrollerAnimation}\n             */\n\n          }, {\n            key: 'scrollToRTL',\n            value: function scrollToRTL(scrollX) {\n              var edges = this.calculateScrollEdges_();\n              var currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n              var clampedScrollLeft = this.clampScrollValue_(edges.right - scrollX);\n              return (\n                /** @type {!MDCTabScrollerAnimation} */\n                {\n                  finalScrollPosition: clampedScrollLeft,\n                  scrollDelta: clampedScrollLeft - currentScrollLeft\n                }\n              );\n            }\n            /**\n             * @param {number} scrollX\n             * @return {!MDCTabScrollerAnimation}\n             */\n\n          }, {\n            key: 'incrementScrollRTL',\n            value: function incrementScrollRTL(scrollX) {\n              var currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n              var clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);\n              return (\n                /** @type {!MDCTabScrollerAnimation} */\n                {\n                  finalScrollPosition: clampedScrollLeft,\n                  scrollDelta: clampedScrollLeft - currentScrollLeft\n                }\n              );\n            }\n            /**\n             * @param {number} scrollX\n             * @return {number}\n             */\n\n          }, {\n            key: 'getAnimatingScrollPosition',\n            value: function getAnimatingScrollPosition(scrollX) {\n              return scrollX;\n            }\n            /**\n             * @return {!MDCTabScrollerHorizontalEdges}\n             * @private\n             */\n\n          }, {\n            key: 'calculateScrollEdges_',\n            value: function calculateScrollEdges_() {\n              var contentWidth = this.adapter_.getScrollContentOffsetWidth();\n              var rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n              return (\n                /** @type {!MDCTabScrollerHorizontalEdges} */\n                {\n                  left: 0,\n                  right: contentWidth - rootWidth\n                }\n              );\n            }\n            /**\n             * @param {number} scrollX\n             * @return {number}\n             * @private\n             */\n\n          }, {\n            key: 'clampScrollValue_',\n            value: function clampScrollValue_(scrollX) {\n              var edges = this.calculateScrollEdges_();\n              return Math.min(Math.max(edges.left, scrollX), edges.right);\n            }\n          }]);\n\n          return MDCTabScrollerRTLDefault;\n        }(__WEBPACK_IMPORTED_MODULE_0__rtl_scroller__[\"a\"\n        /* default */\n        ]);\n        /* harmony default export */\n\n\n        __webpack_exports__[\"a\"] = MDCTabScrollerRTLDefault;\n        /***/\n      },\n\n      /***/\n      58:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n        /* harmony import */\n\n        var __WEBPACK_IMPORTED_MODULE_0__rtl_scroller__ = __webpack_require__(18);\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(9);\n\n        var _createClass = function () {\n          function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n\n          return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n          };\n        }();\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function _possibleConstructorReturn(self, call) {\n          if (!self) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          }\n\n          return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n        }\n\n        function _inherits(subClass, superClass) {\n          if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n          }\n\n          subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n              value: subClass,\n              enumerable: false,\n              writable: true,\n              configurable: true\n            }\n          });\n          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n        }\n        /**\n         * @license\n         * Copyright 2018 Google Inc.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in\n         * all copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n         * THE SOFTWARE.\n         */\n\n        /* eslint-disable no-unused-vars */\n\n        /* eslint-enable no-unused-vars */\n\n        /**\n         * @extends {MDCTabScrollerRTL}\n         * @final\n         */\n\n\n        var MDCTabScrollerRTLNegative = function (_MDCTabScrollerRTL) {\n          _inherits(MDCTabScrollerRTLNegative, _MDCTabScrollerRTL);\n\n          function MDCTabScrollerRTLNegative() {\n            _classCallCheck(this, MDCTabScrollerRTLNegative);\n\n            return _possibleConstructorReturn(this, (MDCTabScrollerRTLNegative.__proto__ || Object.getPrototypeOf(MDCTabScrollerRTLNegative)).apply(this, arguments));\n          }\n\n          _createClass(MDCTabScrollerRTLNegative, [{\n            key: 'getScrollPositionRTL',\n\n            /**\n             * @param {number} translateX The current translateX position\n             * @return {number}\n             */\n            value: function getScrollPositionRTL(translateX) {\n              var currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n              return Math.round(translateX - currentScrollLeft);\n            }\n            /**\n             * @param {number} scrollX\n             * @return {!MDCTabScrollerAnimation}\n             */\n\n          }, {\n            key: 'scrollToRTL',\n            value: function scrollToRTL(scrollX) {\n              var currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n              var clampedScrollLeft = this.clampScrollValue_(-scrollX);\n              return (\n                /** @type {!MDCTabScrollerAnimation} */\n                {\n                  finalScrollPosition: clampedScrollLeft,\n                  scrollDelta: clampedScrollLeft - currentScrollLeft\n                }\n              );\n            }\n            /**\n             * @param {number} scrollX\n             * @return {!MDCTabScrollerAnimation}\n             */\n\n          }, {\n            key: 'incrementScrollRTL',\n            value: function incrementScrollRTL(scrollX) {\n              var currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n              var clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);\n              return (\n                /** @type {!MDCTabScrollerAnimation} */\n                {\n                  finalScrollPosition: clampedScrollLeft,\n                  scrollDelta: clampedScrollLeft - currentScrollLeft\n                }\n              );\n            }\n            /**\n             * @param {number} scrollX\n             * @param {number} translateX\n             * @return {number}\n             */\n\n          }, {\n            key: 'getAnimatingScrollPosition',\n            value: function getAnimatingScrollPosition(scrollX, translateX) {\n              return scrollX - translateX;\n            }\n            /**\n             * @return {!MDCTabScrollerHorizontalEdges}\n             * @private\n             */\n\n          }, {\n            key: 'calculateScrollEdges_',\n            value: function calculateScrollEdges_() {\n              var contentWidth = this.adapter_.getScrollContentOffsetWidth();\n              var rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n              return (\n                /** @type {!MDCTabScrollerHorizontalEdges} */\n                {\n                  left: rootWidth - contentWidth,\n                  right: 0\n                }\n              );\n            }\n            /**\n             * @param {number} scrollX\n             * @return {number}\n             * @private\n             */\n\n          }, {\n            key: 'clampScrollValue_',\n            value: function clampScrollValue_(scrollX) {\n              var edges = this.calculateScrollEdges_();\n              return Math.max(Math.min(edges.right, scrollX), edges.left);\n            }\n          }]);\n\n          return MDCTabScrollerRTLNegative;\n        }(__WEBPACK_IMPORTED_MODULE_0__rtl_scroller__[\"a\"\n        /* default */\n        ]);\n        /* harmony default export */\n\n\n        __webpack_exports__[\"a\"] = MDCTabScrollerRTLNegative;\n        /***/\n      },\n\n      /***/\n      59:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n        /* harmony import */\n\n        var __WEBPACK_IMPORTED_MODULE_0__rtl_scroller__ = __webpack_require__(18);\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_1__adapter__ = __webpack_require__(9);\n\n        var _createClass = function () {\n          function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n\n          return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n          };\n        }();\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n\n        function _possibleConstructorReturn(self, call) {\n          if (!self) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          }\n\n          return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n        }\n\n        function _inherits(subClass, superClass) {\n          if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n          }\n\n          subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n              value: subClass,\n              enumerable: false,\n              writable: true,\n              configurable: true\n            }\n          });\n          if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n        }\n        /**\n         * @license\n         * Copyright 2018 Google Inc.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in\n         * all copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n         * THE SOFTWARE.\n         */\n\n        /* eslint-disable no-unused-vars */\n\n        /* eslint-enable no-unused-vars */\n\n        /**\n         * @extends {MDCTabScrollerRTL}\n         * @final\n         */\n\n\n        var MDCTabScrollerRTLReverse = function (_MDCTabScrollerRTL) {\n          _inherits(MDCTabScrollerRTLReverse, _MDCTabScrollerRTL);\n\n          function MDCTabScrollerRTLReverse() {\n            _classCallCheck(this, MDCTabScrollerRTLReverse);\n\n            return _possibleConstructorReturn(this, (MDCTabScrollerRTLReverse.__proto__ || Object.getPrototypeOf(MDCTabScrollerRTLReverse)).apply(this, arguments));\n          }\n\n          _createClass(MDCTabScrollerRTLReverse, [{\n            key: 'getScrollPositionRTL',\n\n            /**\n             * @param {number} translateX\n             * @return {number}\n             */\n            value: function getScrollPositionRTL(translateX) {\n              var currentScrollLeft = this.adapter_.getScrollAreaScrollLeft(); // Scroll values on most browsers are ints instead of floats so we round\n\n              return Math.round(currentScrollLeft - translateX);\n            }\n            /**\n             * @param {number} scrollX\n             * @return {!MDCTabScrollerAnimation}\n             */\n\n          }, {\n            key: 'scrollToRTL',\n            value: function scrollToRTL(scrollX) {\n              var currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n              var clampedScrollLeft = this.clampScrollValue_(scrollX);\n              return (\n                /** @type {!MDCTabScrollerAnimation} */\n                {\n                  finalScrollPosition: clampedScrollLeft,\n                  scrollDelta: currentScrollLeft - clampedScrollLeft\n                }\n              );\n            }\n            /**\n             * @param {number} scrollX\n             * @return {!MDCTabScrollerAnimation}\n             */\n\n          }, {\n            key: 'incrementScrollRTL',\n            value: function incrementScrollRTL(scrollX) {\n              var currentScrollLeft = this.adapter_.getScrollAreaScrollLeft();\n              var clampedScrollLeft = this.clampScrollValue_(currentScrollLeft + scrollX);\n              return (\n                /** @type {!MDCTabScrollerAnimation} */\n                {\n                  finalScrollPosition: clampedScrollLeft,\n                  scrollDelta: currentScrollLeft - clampedScrollLeft\n                }\n              );\n            }\n            /**\n             * @param {number} scrollX\n             * @return {number}\n             */\n\n          }, {\n            key: 'getAnimatingScrollPosition',\n            value: function getAnimatingScrollPosition(scrollX, translateX) {\n              return scrollX + translateX;\n            }\n            /**\n             * @return {!MDCTabScrollerHorizontalEdges}\n             * @private\n             */\n\n          }, {\n            key: 'calculateScrollEdges_',\n            value: function calculateScrollEdges_() {\n              var contentWidth = this.adapter_.getScrollContentOffsetWidth();\n              var rootWidth = this.adapter_.getScrollAreaOffsetWidth();\n              return (\n                /** @type {!MDCTabScrollerHorizontalEdges} */\n                {\n                  left: contentWidth - rootWidth,\n                  right: 0\n                }\n              );\n            }\n            /**\n             * @param {number} scrollX\n             * @return {number}\n             * @private\n             */\n\n          }, {\n            key: 'clampScrollValue_',\n            value: function clampScrollValue_(scrollX) {\n              var edges = this.calculateScrollEdges_();\n              return Math.min(Math.max(edges.right, scrollX), edges.left);\n            }\n          }]);\n\n          return MDCTabScrollerRTLReverse;\n        }(__WEBPACK_IMPORTED_MODULE_0__rtl_scroller__[\"a\"\n        /* default */\n        ]);\n        /* harmony default export */\n\n\n        __webpack_exports__[\"a\"] = MDCTabScrollerRTLReverse;\n        /***/\n      },\n\n      /***/\n      60:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        Object.defineProperty(__webpack_exports__, \"__esModule\", {\n          value: true\n        });\n        /* harmony export (binding) */\n\n        __webpack_require__.d(__webpack_exports__, \"computeHorizontalScrollbarHeight\", function () {\n          return computeHorizontalScrollbarHeight;\n        });\n        /* harmony export (binding) */\n\n\n        __webpack_require__.d(__webpack_exports__, \"getMatchesProperty\", function () {\n          return getMatchesProperty;\n        });\n        /* harmony import */\n\n\n        var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(42);\n        /**\n         * @license\n         * Copyright 2018 Google Inc.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in\n         * all copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n         * THE SOFTWARE.\n         */\n\n        /**\n         * Stores result from computeHorizontalScrollbarHeight to avoid redundant processing.\n         * @private {number|undefined}\n         */\n\n\n        var horizontalScrollbarHeight_ = void 0;\n        /**\n         * Computes the height of browser-rendered horizontal scrollbars using a self-created test element.\n         * May return 0 (e.g. on OS X browsers under default configuration).\n         * @param {!Document} documentObj\n         * @param {boolean=} shouldCacheResult\n         * @return {number}\n         */\n\n        function computeHorizontalScrollbarHeight(documentObj) {\n          var shouldCacheResult = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n          if (shouldCacheResult && typeof horizontalScrollbarHeight_ !== 'undefined') {\n            return horizontalScrollbarHeight_;\n          }\n\n          var el = documentObj.createElement('div');\n          el.classList.add(__WEBPACK_IMPORTED_MODULE_0__constants__[\"a\"\n          /* cssClasses */\n          ].SCROLL_TEST);\n          documentObj.body.appendChild(el);\n          var horizontalScrollbarHeight = el.offsetHeight - el.clientHeight;\n          documentObj.body.removeChild(el);\n\n          if (shouldCacheResult) {\n            horizontalScrollbarHeight_ = horizontalScrollbarHeight;\n          }\n\n          return horizontalScrollbarHeight;\n        }\n        /**\n         * @param {!Object} HTMLElementPrototype\n         * @return {!Array<string>}\n         */\n\n\n        function getMatchesProperty(HTMLElementPrototype) {\n          return ['msMatchesSelector', 'matches'].filter(function (p) {\n            return p in HTMLElementPrototype;\n          }).pop();\n        }\n        /***/\n\n      },\n\n      /***/\n      9:\n      /***/\n      function _(module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n        /* unused harmony export MDCTabScrollerAnimation */\n\n        /* unused harmony export MDCTabScrollerHorizontalEdges */\n\n        /* unused harmony export MDCTabScrollerAdapter */\n\n        var _createClass = function () {\n          function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n              var descriptor = props[i];\n              descriptor.enumerable = descriptor.enumerable || false;\n              descriptor.configurable = true;\n              if (\"value\" in descriptor) descriptor.writable = true;\n              Object.defineProperty(target, descriptor.key, descriptor);\n            }\n          }\n\n          return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n          };\n        }();\n\n        function _classCallCheck(instance, Constructor) {\n          if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n          }\n        }\n        /**\n         * @license\n         * Copyright 2018 Google Inc.\n         *\n         * Permission is hereby granted, free of charge, to any person obtaining a copy\n         * of this software and associated documentation files (the \"Software\"), to deal\n         * in the Software without restriction, including without limitation the rights\n         * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         * copies of the Software, and to permit persons to whom the Software is\n         * furnished to do so, subject to the following conditions:\n         *\n         * The above copyright notice and this permission notice shall be included in\n         * all copies or substantial portions of the Software.\n         *\n         * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n         * THE SOFTWARE.\n         */\n\n        /* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n        /**\n         * MDCTabScrollerAnimation contains the values required for animating from the\n         * current scroll position to the new scroll position. The \"finalScrollPosition\"\n         * value represents the new scroll position while the \"scrollDelta\" value is the\n         * corresponding transformation that is applied to the scroll content. Together,\n         * they create the animation by first updating the scroll value then applying\n         * the transformation and animating the transition. Both pieces are necessary\n         * for the scroll animation to work. The values are used as-is by the tab\n         * scroller animation method, ensuring that all logic for determining scroll\n         * position or transformation is abstracted away from the animation method.\n         * @typedef {{finalScrollPosition: number, scrollDelta: number}}\n         */\n\n\n        var MDCTabScrollerAnimation = void 0;\n        /**\n         * MDCTabScrollerHorizontalEdges represents the left and right edges of the\n         * scroll content. These values vary depending on how scrolling in RTL is\n         * implemented by the browser. One value is always 0 and one value is always\n         * the max scrollable value as either a positive or negative integer.\n         * @typedef {{left: number, right: number}}\n         */\n\n        var MDCTabScrollerHorizontalEdges = void 0;\n        /**\n         * Adapter for MDC Tab Scroller.\n         *\n         * Defines the shape of the adapter expected by the foundation. Implement this\n         * adapter to integrate the Tab  into your framework. See\n         * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n         * for more information.\n         *\n         * @record\n         */\n\n        var MDCTabScrollerAdapter = function () {\n          function MDCTabScrollerAdapter() {\n            _classCallCheck(this, MDCTabScrollerAdapter);\n          }\n\n          _createClass(MDCTabScrollerAdapter, [{\n            key: \"addClass\",\n\n            /**\n             * Adds the given className to the root element.\n             * @param {string} className The className to add\n             */\n            value: function addClass(className) {}\n            /**\n             * Removes the given className from the root element.\n             * @param {string} className The className to remove\n             */\n\n          }, {\n            key: \"removeClass\",\n            value: function removeClass(className) {}\n            /**\n             * Adds the given className to the scroll area element.\n             * @param {string} className The className to add\n             */\n\n          }, {\n            key: \"addScrollAreaClass\",\n            value: function addScrollAreaClass(className) {}\n            /**\n             * Returns whether the event target matches given className.\n             * @param {EventTarget} evtTarget The event target\n             * @param {string} selector The selector to check\n             * @return {boolean}\n             */\n\n          }, {\n            key: \"eventTargetMatchesSelector\",\n            value: function eventTargetMatchesSelector(evtTarget, selector) {}\n            /**\n             * Sets a style property of the area element to the passed value.\n             * @param {string} propName The style property name to set\n             * @param {string} value The style property value\n             */\n\n          }, {\n            key: \"setScrollAreaStyleProperty\",\n            value: function setScrollAreaStyleProperty(propName, value) {}\n            /**\n             * Sets a style property of the content element to the passed value.\n             * @param {string} propName The style property name to set\n             * @param {string} value The style property value\n             */\n\n          }, {\n            key: \"setScrollContentStyleProperty\",\n            value: function setScrollContentStyleProperty(propName, value) {}\n            /**\n             * Returns the scroll content element's computed style value of the given css property `propertyName`.\n             * We achieve this via `getComputedStyle(...).getPropertyValue(propertyName)`.\n             * @param {string} propertyName\n             * @return {string}\n             */\n\n          }, {\n            key: \"getScrollContentStyleValue\",\n            value: function getScrollContentStyleValue(propertyName) {}\n            /**\n             * Sets the scrollLeft value of the scroll area element to the passed value.\n             * @param {number} scrollLeft The new scrollLeft value\n             */\n\n          }, {\n            key: \"setScrollAreaScrollLeft\",\n            value: function setScrollAreaScrollLeft(scrollLeft) {}\n            /**\n             * Returns the scrollLeft value of the scroll area element.\n             * @return {number}\n             */\n\n          }, {\n            key: \"getScrollAreaScrollLeft\",\n            value: function getScrollAreaScrollLeft() {}\n            /**\n             * Returns the offsetWidth of the scroll content element.\n             * @return {number}\n             */\n\n          }, {\n            key: \"getScrollContentOffsetWidth\",\n            value: function getScrollContentOffsetWidth() {}\n            /**\n             * Returns the offsetWitdth of the scroll area element.\n             * @return {number}\n             */\n\n          }, {\n            key: \"getScrollAreaOffsetWidth\",\n            value: function getScrollAreaOffsetWidth() {}\n            /**\n             * Returns the bounding client rect of the scroll area element.\n             * @return {!ClientRect}\n             */\n\n          }, {\n            key: \"computeScrollAreaClientRect\",\n            value: function computeScrollAreaClientRect() {}\n            /**\n             * Returns the bounding client rect of the scroll content element.\n             * @return {!ClientRect}\n             */\n\n          }, {\n            key: \"computeScrollContentClientRect\",\n            value: function computeScrollContentClientRect() {}\n            /**\n             * Returns the height of the browser's horizontal scrollbars (in px).\n             * @return {number}\n             */\n\n          }, {\n            key: \"computeHorizontalScrollbarHeight\",\n            value: function computeHorizontalScrollbarHeight() {}\n          }]);\n\n          return MDCTabScrollerAdapter;\n        }();\n        /***/\n\n      }\n      /******/\n\n    })\n  );\n});","map":null,"metadata":{},"sourceType":"script"}