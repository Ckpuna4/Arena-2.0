{"ast":null,"code":"import _classCallCheck from \"/Users/ashok/Desktop/arena/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ashok/Desktop/arena/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ashok/Desktop/arena/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ashok/Desktop/arena/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ashok/Desktop/arena/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ashok/Desktop/arena/src/Components/common/AppBar/AppBar.jsx\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport TopAppBar, { TopAppBarFixedAdjust } from '@material/react-top-app-bar';\nimport MaterialIcon from '@material/react-material-icon';\nimport Drawer, { DrawerContent, DrawerHeader, DrawerTitle, DrawerSubtitle } from '@material/react-drawer';\nimport List, { ListItem, ListItemGraphic, ListItemText } from '@material/react-list';\nimport drawerItems from './drawerItems';\nimport './AppBar.scss';\nimport 'tachyons';\n\nvar AppBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AppBar, _React$Component);\n\n  function AppBar(props) {\n    var _this;\n\n    _classCallCheck(this, AppBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppBar).call(this, props));\n\n    _this.onItemClick = function (index) {\n      _this.setState({\n        open: !_this.state.open,\n        selectedIndex: index\n      });\n    };\n\n    _this.state = {\n      open: false,\n      selectedIndex: 0\n    };\n    return _this;\n  } // selectedIndex is the state variable which decides which option is selected\n\n\n  _createClass(AppBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // The following conditional statements are used to\n      // check that on which route our page was refreshed\n      // and thereby updating the value of selectedIndex respectively.\n      // This was needed to be done because when the page is refreshed\n      // all the states are reset and hence the selectedIndex always was initialized\n      // with 0 but the active link was the same as the previous one.\n      var location = this.props.location;\n      var currentPathname = location.pathname;\n\n      if (currentPathname === '/') {\n        this.setState({\n          selectedIndex: 0\n        });\n      } else if (currentPathname === '/contests') {\n        this.setState({\n          selectedIndex: 1\n        });\n      } else if (currentPathname === '/ratings') {\n        this.setState({\n          selectedIndex: 2\n        });\n      } else if (currentPathname === '/blog') {\n        this.setState({\n          selectedIndex: 3\n        });\n      } else if (currentPathname === '/problem-set') {\n        this.setState({\n          selectedIndex: 4\n        });\n      } else if (currentPathname === '/playlists') {\n        this.setState({\n          selectedIndex: 5\n        });\n      } else if (currentPathname === '/goodies') {\n        this.setState({\n          selectedIndex: 6\n        });\n      } else if (currentPathname === '/turing-cup') {\n        this.setState({\n          selectedIndex: 7\n        });\n      } else {\n        this.setState({\n          // selectedIndex : 100 specifies that no item from the drawer is selected\n          // Any random large number can be taken\n          selectedIndex: 100\n        });\n      }\n    } // The following function closes the drawer (by making open=false)\n    // and updates selectedIndex depending upon which item is clicked\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.state.open ? React.createElement(Drawer, {\n        className: \"react-drawer-alternate\",\n        modal: true,\n        open: this.state.open,\n        onClose: function onClose() {\n          return _this2.setState({\n            open: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(DrawerHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \" \", React.createElement(DrawerTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \" \", \"Explore Arena\"), React.createElement(DrawerSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \" \", \"matt@email.com\")), React.createElement(DrawerContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(List, {\n        singleSelection: true,\n        selectedIndex: this.state.selectedIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, drawerItems.map(function (item, index) {\n        return React.createElement(ListItem, {\n          key: item.id,\n          className: \"pointer\",\n          style: {\n            padding: \"0\"\n          },\n          onClick: function onClick() {\n            return _this2.onItemClick(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: {\n            pathname: item.path\n          },\n          exact: true,\n          className: \"no-underline db pa3 black\",\n          activeStyle: {\n            color: \"#6200EE\"\n          },\n          style: {\n            width: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(ListItemGraphic, {\n          className: \"v-mid\",\n          graphic: React.createElement(MaterialIcon, {\n            icon: item.icon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \"v-mid\",\n          primaryText: item.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        })));\n      })))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(TopAppBar, {\n        fixed: true,\n        className: \"react-top-app-bar-alternate\",\n        title: \"SIESGSTarena\",\n        navigationIcon: React.createElement(MaterialIcon, {\n          icon: \"menu\",\n          onClick: function onClick() {\n            return _this2.setState({\n              open: !_this2.state.open\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }),\n        actionItems: [React.createElement(MaterialIcon, {\n          key: \"item\",\n          icon: \"search\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }), React.createElement(MaterialIcon, {\n          key: \"item\",\n          icon: \"account_circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        })],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(TopAppBarFixedAdjust, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AppBar;\n}(React.Component);\n\nexport default AppBar;","map":{"version":3,"sources":["/Users/ashok/Desktop/arena/src/Components/common/AppBar/AppBar.jsx"],"names":["React","NavLink","TopAppBar","TopAppBarFixedAdjust","MaterialIcon","Drawer","DrawerContent","DrawerHeader","DrawerTitle","DrawerSubtitle","List","ListItem","ListItemGraphic","ListItemText","drawerItems","AppBar","props","onItemClick","index","setState","open","state","selectedIndex","location","currentPathname","pathname","map","item","id","padding","path","color","width","icon","name","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport TopAppBar, { TopAppBarFixedAdjust } from '@material/react-top-app-bar';\nimport MaterialIcon from '@material/react-material-icon';\nimport Drawer, {\n  DrawerContent, DrawerHeader, DrawerTitle, DrawerSubtitle,\n} from '@material/react-drawer';\nimport List, {\n  ListItem, ListItemGraphic, ListItemText,\n} from '@material/react-list';\nimport drawerItems from './drawerItems';\nimport './AppBar.scss';\nimport 'tachyons';\n\nclass AppBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      selectedIndex: 0,\n    };\n  }\n  // selectedIndex is the state variable which decides which option is selected\n\n  componentDidMount() {\n    // The following conditional statements are used to\n    // check that on which route our page was refreshed\n    // and thereby updating the value of selectedIndex respectively.\n    // This was needed to be done because when the page is refreshed\n    // all the states are reset and hence the selectedIndex always was initialized\n    // with 0 but the active link was the same as the previous one.\n    const { location } = this.props;\n    const { pathname: currentPathname } = location;\n    if (currentPathname === '/') {\n      this.setState({\n        selectedIndex: 0,\n      });\n    }\n    else if (currentPathname === '/contests') {\n      this.setState({\n        selectedIndex: 1,\n      });\n    }\n    else if (currentPathname === '/ratings') {\n      this.setState({\n        selectedIndex: 2,\n      });\n    }\n    else if (currentPathname === '/blog') {\n      this.setState({\n        selectedIndex: 3,\n      });\n    }\n    else if (currentPathname === '/problem-set') {\n      this.setState({\n        selectedIndex: 4,\n      });\n    }\n    else if (currentPathname === '/playlists') {\n      this.setState({\n        selectedIndex: 5,\n      });\n    }\n    else if (currentPathname === '/goodies') {\n      this.setState({\n        selectedIndex: 6,\n      });\n    }\n    else if (currentPathname === '/turing-cup') {\n      this.setState({\n        selectedIndex: 7,\n      });\n    }\n    else {\n      this.setState({\n        // selectedIndex : 100 specifies that no item from the drawer is selected\n        // Any random large number can be taken\n        selectedIndex: 100,\n      });\n    }\n  }\n\n  // The following function closes the drawer (by making open=false)\n  // and updates selectedIndex depending upon which item is clicked\n  onItemClick = (index) => {\n    this.setState({\n      open: !this.state.open,\n      selectedIndex: index,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        { this.state.open \n          ? <Drawer\n              className=\"react-drawer-alternate\"\n              modal\n              open={this.state.open}\n              onClose={() => this.setState({open: false})}\n            >\n            \n            <DrawerHeader> {/*defaults to div*/}\n              <DrawerTitle tag=\"h2\"> {/*defaults to h3*/}\n                Explore Arena\n              </DrawerTitle>\n              <DrawerSubtitle> {/*defaults to h6*/}\n                matt@email.com\n              </DrawerSubtitle>\n            </DrawerHeader>\n\n            <DrawerContent>\n              <List singleSelection selectedIndex={this.state.selectedIndex}>  \n                { drawerItems.map( (item, index) => {\n                  return(\n                    <ListItem key={item.id} className=\"pointer\" style={{padding: \"0\"}} onClick={() => this.onItemClick(index)} >\n                      <NavLink to={{pathname: item.path}} exact className=\"no-underline db pa3 black\" activeStyle={{color: \"#6200EE\"}} style={{width: \"100%\"}}>\n                        <ListItemGraphic className=\"v-mid\" graphic={<MaterialIcon icon={item.icon}/>} />\n                        <ListItemText className=\"v-mid\" primaryText={item.name} />\n                      </NavLink>\n                    </ListItem>\n                  )\n                  })\n                }\n              </List>\n            </DrawerContent>\n\n          </Drawer>\n            \n        :\n          <div>\n          </div>\n        }\n\n        <TopAppBar\n          fixed\n          className=\"react-top-app-bar-alternate\"\n          title=\"SIESGSTarena\"\n          navigationIcon={<MaterialIcon\n            icon=\"menu\"\n            onClick={() => this.setState({ open: !this.state.open })}\n          />}\n          actionItems={[\n            <MaterialIcon key=\"item\" icon=\"search\" />,\n            <MaterialIcon key=\"item\" icon=\"account_circle\" />,\n          ]}\n        />\n        <TopAppBarFixedAdjust />\n    </div>\n    );\n  }\n}\n\nexport default AppBar;\n\n"]},"metadata":{},"sourceType":"module"}